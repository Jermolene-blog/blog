_hash: db2d6dc5a63b9262d62fb6ffe02dbe10fdd31feb
created: 20131111192330000
creator: osmosoft
modified: 20131111192330000
modifier: osmosoft
server.bag: system-plugins_public
server.content-type: text/javascript
server.etag: "system-plugins_public/TiddlySpaceRevertRevision/1521871:66844d6331ddf7f1f1db88d083e182efa5a4a313"
server.host: http://jermolene.com
server.page.revision: 1521871
server.permissions: read
server.recipe: jermolene_public
server.title: TiddlySpaceRevertRevision
server.type: tiddlyweb
server.workspace: bags/system-plugins_public
tags: excludeLists excludeMissing excludeSearch systemConfig
title: TiddlySpaceRevertRevision
type: text/x-tiddlywiki

/***
|''Name''|TiddlySpaceRevertRevision|
|''Description''|Revert to a previous revision|
|''Author''|BenGillies|
|''Version''|0.1|
|''Status''|unstable|
|''Source''|http://github.com/TiddlySpace/tiddlyspace|
|''CodeRepository''|http://github.com/TiddlySpace/tiddlyspace|
|''License''|[[BSD|http://www.opensource.org/licenses/bsd-license.php]]|
|''CoreVersion''|2.6.0|
|''Requires''|TiddlyWebAdaptor TiddlySpaceRevisionView|
!Usage
Add a control button to revert to a particular revision.

The button must be called from within a revision, as generated by TiddlySpaceRevisionView
!Code
***/
//{{{
(function($) {

config.commands.revert = {
	text: "revert",
	tooltip: "make this revision the current one",
	handler: function(ev, src, title) {
		var revElem = story.getTiddler(title);
		var tidToRevert = store.getTiddler($(revElem).attr("revName"));

		var revision = store.getTiddler(title);
		if ((revision) && (tidToRevert)) {
			tidToRevert.text = revision.text;
			var newFields = merge({}, revision.fields);
			for (var fieldName in newFields) {
				if (fieldName.substr(0, 7) === "server.") {
					delete newFields[fieldName];
				}
			}
			merge(tidToRevert.fields, newFields);
			tidToRevert.tags = merge([], revision.tags);
			tidToRevert.fields.changecount = 1;
			delete tidToRevert.fields.doNotSave;

			store.saveTiddler(tidToRevert.title, tidToRevert.title,
				tidToRevert.text, null, null, tidToRevert.tags,
				tidToRevert.fields, false, tidToRevert.created, tidToRevert.creator);

			autoSaveChanges(true);
		}
	}
};

})(jQuery);
//}}}